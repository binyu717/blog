(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{401:function(e,t,o){"use strict";o.r(t);var r=o(54),c=Object(r.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h2",{attrs:{id:"推荐"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#推荐"}},[e._v("#")]),e._v(" 推荐")]),e._v(" "),o("ul",[o("li",[o("a",{attrs:{href:"https://yeasy.gitbooks.io/docker_practice/content/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker — 从入门到实践"),o("OutboundLink")],1)]),e._v(" "),o("li",[o("a",{attrs:{href:"https://mp.weixin.qq.com/s/N_EAb776No1ATBdL4XQg-A",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用 Docker 搭建 Java Web 运行环境"),o("OutboundLink")],1)])]),e._v(" "),o("h2",{attrs:{id:"安装docker"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#安装docker"}},[e._v("#")]),e._v(" 安装docker")]),e._v(" "),o("h3",{attrs:{id:"docker-分为-ce-和-ee-两大版本。ce-即社区版-免费-支持周期-7-个月-ee-即企业版-强调安全-付费使用-支持周期-24-个月。"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#docker-分为-ce-和-ee-两大版本。ce-即社区版-免费-支持周期-7-个月-ee-即企业版-强调安全-付费使用-支持周期-24-个月。"}},[e._v("#")]),e._v(" Docker 分为 CE 和 EE 两大版本。CE 即社区版（免费，支持周期 7 个月），EE 即企业版，强调安全，付费使用，支持周期 24 个月。")]),e._v(" "),o("ul",[o("li",[e._v("Ubuntu 操作系统")]),e._v(" "),o("li",[e._v("使用 APT 安装\n"),o("blockquote",[o("p",[e._v("$ sudo apt-get update"),o("br"),e._v("\n$ sudo apt-get install docker-ce")])])]),e._v(" "),o("li",[e._v("使用脚本自动安装\n"),o("blockquote",[o("p",[e._v("$ curl -fsSL get.docker.com -o get-docker.sh"),o("br"),e._v("\n$ sudo sh get-docker.sh --mirror Aliyun")])])]),e._v(" "),o("li",[e._v("启动 Docker CE\n"),o("blockquote",[o("p",[e._v("$ sudo systemctl enable docker\n$ sudo systemctl start docker")])])]),e._v(" "),o("li",[e._v("建立 docker 用户组\n"),o("ul",[o("li",[e._v("建立 docker 组：\n"),o("blockquote",[o("p",[e._v("$ sudo groupadd docker")])])]),e._v(" "),o("li",[e._v("将当前用户加入 docker 组：\n"),o("blockquote",[o("p",[e._v("$ sudo usermod -aG docker $USER")])])])])])]),e._v(" "),o("h2",{attrs:{id:"基本命令"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#基本命令"}},[e._v("#")]),e._v(" 基本命令")]),e._v(" "),o("ul",[o("li",[e._v("查看docker版本\n"),o("blockquote",[o("p",[e._v("docker version"),o("br"),e._v("\n一般用 docker -v 显示少量信息")])])]),e._v(" "),o("li",[e._v("搜索镜像\n"),o("blockquote",[o("p",[e._v("docker search [tomcat]")])])]),e._v(" "),o("li",[e._v("拉取镜像\n"),o("blockquote",[o("p",[e._v("docker pull tomcat:latest"),o("br"),e._v("\nlatest是一个标签（tag），表示是当前最新版本")])])]),e._v(" "),o("li",[e._v("查看你自己的本地镜像\n"),o("blockquote",[o("p",[e._v("docker images  等同于 docker image ls")])])]),e._v(" "),o("li",[e._v("查看镜像、容器、数据卷所占用的空间。")]),e._v(" "),o("li",[e._v("删除本地的镜像")])]),e._v(" "),o("blockquote",[o("p",[e._v("docker image rm [选项] <镜像1> [<镜像2> ...]"),o("br"),e._v("\ndocker system df")])]),e._v(" "),o("ul",[o("li",[e._v("commit")]),e._v(" "),o("li",[e._v("查看所有容器：\n"),o("blockquote",[o("p",[e._v("docker ps -a")])])]),e._v(" "),o("li",[e._v("查看当前正在运行的容器：\n"),o("blockquote",[o("p",[e._v("docker ps")])])]),e._v(" "),o("li",[e._v("运行容器，以tomcat为例\n"),o("ul",[o("li",[e._v("以后台守护进程的方式启动 [可选]")])]),e._v(" "),o("blockquote",[o("p",[e._v("docker run [--name containName] -d tomcat:latest")])]),e._v(" "),o("ul",[o("li",[e._v("以交互的方式运行,-it：这是两个参数，一个是 -i：交互式操作，一个是 -t 终端,--rm：这个参数是说容器退出后随之将其删除。默认情况下，为了排障需求，退出的容器并不会立即删除，除非手动 docker rm,指定容器和主机的映射端口(前一个8080是指我们访问tomcat时的端口号，后一个8080是tomcat启动的一个容器在docker中运行的端口号)")])]),e._v(" "),o("blockquote",[o("p",[e._v("docker run -it -rm -p 8080:8080 tomcat:latest /bin/bash"),o("br"),e._v("\n将容器目录挂载到机器上\ndocker run --name docker-nane -d -v /root/opt/web/webapps/:/usr/local/tomcat/webapps/  -p 8086:8080 tomcat:8.5.32-jre8")])])]),e._v(" "),o("li",[e._v("启动、停止、重启、删除容器的命令\n"),o("blockquote",[o("p",[e._v("docker start container_name/container_id"),o("br"),e._v("\ndocker stop container_name/container_id"),o("br"),e._v("\ndocker restart container_name/container_id"),o("br"),e._v("\ndocker rm container_name/container_id\ndocker rmi 强制删除")])])]),e._v(" "),o("li",[e._v("进入容器\n"),o("blockquote",[o("p",[e._v("docker exec -it container_name/container_id bash"),o("br"),e._v("\ndocker exec -it container_name/container_id /bin/bash")])])]),e._v(" "),o("li",[e._v("复制文件到容器中\n"),o("blockquote",[o("p",[e._v("docker cp src_path container:dest_path")])])]),e._v(" "),o("li",[e._v("保存镜像\n"),o("blockquote",[o("p",[e._v("docker commit [选项] <容器ID或容器名> [<仓库名>[:<标签>]]")])])]),e._v(" "),o("li",[e._v("实时查看docker容器日志\n"),o("blockquote",[o("p",[e._v("docker logs -f --tail 行数 容器名"),o("br"),e._v("\n-f : 查看实时日志"),o("br"),e._v("\n-t : 查看日志产生的日期\n--tail : 只显示最新n条容器日志\n--since : 显示某个开始时间的所有日志")])])]),e._v(" "),o("li",[e._v("显示指定容器的端口映射\n"),o("blockquote",[o("p",[e._v("docker port")])])]),e._v(" "),o("li",[e._v("容器与物理主机之间拷贝文件\n"),o("blockquote",[o("p",[e._v("docker cp")])]),e._v(" "),o("ul",[o("li",[e._v("docker cp /home/index.html contain-id:/etc/"),o("br"),e._v("\n将物理机的home/index.html 拷贝到contain-id容器的etc/目录下")]),e._v(" "),o("li",[e._v("docker cp /home/index.html contain-id:/etc/index-back.html"),o("br"),e._v("\n将物理机的home/index.html 拷贝到contain-id容器的etc/目录下 改名为index-back.html")]),e._v(" "),o("li",[e._v("docker cp contain-id:/etc/index.html  /home/"),o("br"),e._v("\n拷贝容器contain-id:/etc/index.html到物理机中的/home/目录下")])])]),e._v(" "),o("li",[e._v("查看已下载的Docker镜像latest具体版本\n"),o("blockquote",[o("p",[e._v("docker image inspect (docker image名称):latest|grep -i version")])])])]),e._v(" "),o("h2",{attrs:{id:"dockerfile详解"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile详解"}},[e._v("#")]),e._v(" dockerfile详解")]),e._v(" "),o("h3",{attrs:{id:"dockerfile介绍"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile介绍"}},[e._v("#")]),e._v(" Dockerfile介绍")]),e._v(" "),o("ul",[o("li",[e._v("Dockerfile是一个包含用于组合映像的命令的文本文档，其内包含了一条条的指令(Instruction)，每一条指令构建一层，因此每一条指令的内容，就是描述该层应当如何构建。")]),e._v(" "),o("li",[e._v("Dockerfile 一般分为四部分：基础镜像信息、维护者信息、镜像操作指令和容器启动时执行指令")]),e._v(" "),o("li",[e._v("Docker以从上到下的顺序运行Dockerfile的指令。为了指定基本映像，第一条指令必须是FROM。一个声明以＃字符开头则被视为注释。可以在Docker文件中使用RUN，CMD，FROM，EXPOSE，ENV等指令。")])]),e._v(" "),o("h3",{attrs:{id:"常用指令"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#常用指令"}},[e._v("#")]),e._v(" 常用指令")]),e._v(" "),o("ul",[o("li",[e._v("FROM：指定基础镜像，必须为第一个命令。Docker 还存在一个特殊的镜像，名为 scratch。这个镜像是虚拟的概念，并不实际存在，它表示一个空白的镜像。")]),e._v(" "),o("li",[e._v("RUN： 执行命令，其格式有两种：\n"),o("ul",[o("li",[e._v("shell 格式：RUN <命令>，就像直接在命令行中输入的命令一样。刚才写的 Dockerfile 中的 RUN 指令就是这种格式。")]),e._v(" "),o("li",[e._v('exec 格式：RUN ["可执行文件", "参数1", "参数2"]，这更像是函数调用中的格式。')])])])])])}),[],!1,null,null,null);t.default=c.exports}}]);