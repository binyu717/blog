(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{400:function(t,v,_){"use strict";_.r(v);var e=_(54),i=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"基本命令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基本命令"}},[t._v("#")]),t._v(" 基本命令")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("配置个人信息")]),t._v(" "),_("blockquote",[_("p",[t._v('$ git config --global user.name "Your Name"'),_("br"),t._v('\n$ git config --global user.email "email@example.com"')])])]),t._v(" "),_("li",[_("p",[t._v("初始化")]),t._v(" "),_("blockquote",[_("p",[t._v("$ git init")])])]),t._v(" "),_("li",[_("p",[t._v("拉取远程的Repo到本地")]),t._v(" "),_("blockquote",[_("p",[t._v("$ git clone xxxxxx")])])]),t._v(" "),_("li",[_("p",[t._v("文件添加到仓库")]),t._v(" "),_("blockquote",[_("p",[t._v("$ git add -p")])])]),t._v(" "),_("li",[_("p",[t._v("把文件提交到仓库")]),t._v(" "),_("blockquote",[_("p",[t._v('$ git commit -m "add LICENSE"')])])]),t._v(" "),_("li",[_("p",[t._v("查看difference")]),t._v(" "),_("blockquote",[_("p",[t._v("$ git diff"),_("br"),t._v("\ngit diff HEAD -- readme.txt命令可以查看工作区和版本库里面最新版本的区别")])])]),t._v(" "),_("li",[_("p",[t._v("显示从最近到最远的提交日志")]),t._v(" "),_("blockquote",[_("p",[t._v("$ git log --pretty=oneline")])])]),t._v(" "),_("li",[_("p",[t._v("版本回退")]),t._v(" "),_("blockquote",[_("p",[t._v("$ git reset --hard HEAD^ # 当前版本HEAD,上一个版本HEAD^,上上个版本HEAD^^")])])]),t._v(" "),_("li",[_("p",[t._v("查看命令记录")]),t._v(" "),_("blockquote",[_("p",[t._v("git reflog")])])]),t._v(" "),_("li",[_("p",[t._v("丢弃工作区的修改，回到最近一次git commit或git add时的状态：")]),t._v(" "),_("blockquote",[_("p",[t._v("$ git checkout -- READER.md")])])]),t._v(" "),_("li",[_("p",[t._v("把暂存区的修改撤销掉（unstage）")]),t._v(" "),_("blockquote",[_("p",[t._v("$ git reset HEAD READER.md")])])]),t._v(" "),_("li",[_("p",[t._v("在本地仓库删除文件")]),t._v(" "),_("blockquote",[_("p",[t._v("$ git rm 我的文件")])])]),t._v(" "),_("li",[_("p",[t._v("在本地仓库删除文件夹")]),t._v(" "),_("blockquote",[_("p",[t._v("$ git rm -r 我的文件夹/"),_("br"),t._v(" "),_("em",[t._v("#此处-r表示递归所有子目录，如果你要删除的，是空的文件夹，此处可以不用带上-r。")])])])]),t._v(" "),_("li",[_("p",[t._v("本地仓库关联到远程仓库")]),t._v(" "),_("blockquote",[_("p",[t._v("$ git remote add origin xxxxx")])])]),t._v(" "),_("li",[_("p",[t._v("删除远程关联")]),t._v(" "),_("blockquote",[_("p",[t._v("$ git remote remove origin")])])]),t._v(" "),_("li",[_("p",[t._v("向远程库推送更新")]),t._v(" "),_("blockquote",[_("p",[t._v("$ git push origin master")])])]),t._v(" "),_("li",[_("p",[t._v("创建+切换dev分支")]),t._v(" "),_("blockquote",[_("p",[t._v("$ git checkout -b dev"),_("br"),t._v("\n#相当于"),_("br"),t._v("\n$ git branch dev # 创建分支"),_("br"),t._v("\n$ git checkout dev")])])]),t._v(" "),_("li",[_("p",[t._v("查看当前分支，当前分支前面标有×号")]),t._v(" "),_("blockquote",[_("p",[t._v("$ git branch")])])]),t._v(" "),_("li",[_("p",[t._v("删除dev分支")]),t._v(" "),_("blockquote",[_("p",[t._v("$ git branch -d dev")])])]),t._v(" "),_("li",[_("p",[t._v("要查看远程库的信息")]),t._v(" "),_("blockquote",[_("p",[t._v("$ git remote"),_("br"),t._v("\n$ git remote -v  "),_("em",[t._v("列出详细信息，在每一个名字后面列出其远程url")])])])])]),t._v(" "),_("h2",{attrs:{id:"git-stash-系列"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-系列"}},[t._v("#")]),t._v(" git stash 系列")]),t._v(" "),_("blockquote",[_("p",[t._v("把所有未提交的修改（包括暂存的和非暂存的）都保存起来，用于后续恢复当前工作目录")])]),t._v(" "),_("ul",[_("li",[t._v("命令跟 Git stash 很像。 但是这个命令带有各种选项\n"),_("blockquote",[_("p",[t._v('$ git stash save ""')])])]),t._v(" "),_("li",[t._v("查看工作现场列表\n"),_("blockquote",[_("p",[t._v("$ git stash list")])])]),t._v(" "),_("li",[t._v("恢复工作现场\n"),_("blockquote",[_("p",[t._v("$ git stash pop  "),_("em",[t._v("恢复的同时把stash内容也删了, stash@{0} 更新为了上一个版本的 stash")]),_("br"),t._v("\n$ git stash apply"),_("br"),t._v(" "),_("em",[t._v("将堆栈中最顶层的 stash 拿出并交回给代码仓库。想获取一些其他的 stash ，你可以指定 stash ID")])])])]),t._v(" "),_("li",[t._v("显示了 stash 之间的差异的概要\n"),_("blockquote",[_("p",[t._v("$ git stash show"),_("br"),t._v(" "),_("em",[t._v("git stash show -p 显示完整的c差异信息")]),_("br"),t._v(" "),_("em",[t._v("git stash show stash@{1} 指定 stash ID 来获取差异的概要")])])])]),t._v(" "),_("li",[t._v("创建一个最新 stash 的新的分支，然后删除该stash,也可以指定 stash ID\n"),_("blockquote",[_("p",[t._v("$ git stash branch branchName")])])]),t._v(" "),_("li",[t._v("删除仓库中的所有的 stashes\n"),_("blockquote",[_("p",[t._v("$ git stash clear")])])]),t._v(" "),_("li",[t._v("从堆栈中删除最新的stash,同样可以指定 stash ID\n"),_("blockquote",[_("p",[t._v("$ git stash drop")])])])]),t._v(" "),_("h2",{attrs:{id:"git-tag"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git-tag"}},[t._v("#")]),t._v(" git tag")]),t._v(" "),_("ul",[_("li",[t._v("查看所有标签\n"),_("blockquote",[_("p",[t._v("git tag")])])]),t._v(" "),_("li",[t._v("查看标签详情\n"),_("blockquote",[_("p",[t._v("git show "),_("tagname")],1)])]),t._v(" "),_("li",[t._v("创建标签\n"),_("blockquote",[_("p",[t._v("git tag -a "),_("code",[t._v("<tagname>")]),t._v(' -m"" '),_("code",[t._v("<commitId>")])])])]),t._v(" "),_("li",[t._v("推送至远程\n"),_("blockquote",[_("p",[t._v("git push origin "),_("code",[t._v("<tagname>")])])])]),t._v(" "),_("li",[t._v("删除本地标签\n"),_("blockquote",[_("p",[t._v("git tag -d "),_("code",[t._v("<tagname>")])])])]),t._v(" "),_("li",[t._v("删除远程标签（只会删除远程，本地保留）\n"),_("blockquote",[_("p",[t._v("git push origin :refs/tags/"),_("code",[t._v("<tagname>")])])])])]),t._v(" "),_("h2",{attrs:{id:"远程仓库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#远程仓库"}},[t._v("#")]),t._v(" 远程仓库")]),t._v(" "),_("ul",[_("li",[t._v("更换远程仓库地址，URL为新地址\n"),_("blockquote",[_("p",[t._v("git remote set-url origin URL")])])]),t._v(" "),_("li",[t._v("删除现有远程仓库\n"),_("blockquote",[_("p",[t._v("git remote rm origin")])])]),t._v(" "),_("li",[t._v("添加新远程仓库\n"),_("blockquote",[_("p",[t._v("git remote add origin url")])])])]),t._v(" "),_("h2",{attrs:{id:"reset和revert"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#reset和revert"}},[t._v("#")]),t._v(" reset和revert")]),t._v(" "),_("h3",{attrs:{id:"reset-回退到指定的commit"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#reset-回退到指定的commit"}},[t._v("#")]),t._v(" reset 回退到指定的commit")]),t._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("--soft 回退后a分支修改的代码被保留并标记为add的状态（git status 是绿色的状态）\n--mixed 重置索引，但不重置工作树，更改后的文件标记为未提交（add）的状态。默认操作。\n--hard 重置索引和工作树，并且a分支修改的所有文件和中间的提交，没提交的代码都被丢弃了。\n--merge 和--hard类似，只不过如果在执行reset命令之前你有改动一些文件并且未提交，merge会保留你的这些修改，hard则不会。【注：如果你的这些修改add过或commit过，merge和hard都将删除你的提交】\n--keep 和--hard类似，执行reset之前改动文件如果是a分支修改了的，会提示你修改了相同的文件，不能合并。如果不是a分支修改的文件，会移除缓存区。git status还是可以看到保持了这些修改。\n\n")])])]),_("h3",{attrs:{id:"revert-用一次新的commit来中和指定的commit-不影响该commit后的代码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#revert-用一次新的commit来中和指定的commit-不影响该commit后的代码"}},[t._v("#")]),t._v(" revert 用一次新的commit来中和指定的commit（不影响该commit后的代码）")]),t._v(" "),_("h2",{attrs:{id:"项目实践"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#项目实践"}},[t._v("#")]),t._v(" 项目实践")]),t._v(" "),_("ul",[_("li",[t._v("版本切换")])]),t._v(" "),_("blockquote",[_("p",[t._v("HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令"),_("br"),t._v("\ngit reset --hard commit_id。"),_("br"),t._v("\n穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。\ngit log --pretty=oneline简约版"),_("br"),t._v("\n要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。")])]),t._v(" "),_("ul",[_("li",[t._v("撤销更改\n"),_("ul",[_("li",[_("p",[t._v("已修改，未暂存  ：\n查看工作区与暂存区之间的差异")]),t._v(" "),_("blockquote",[_("p",[t._v("git diff")])]),t._v(" "),_("p",[t._v("撤销操作：")]),t._v(" "),_("blockquote",[_("p",[t._v("git checkout . 或者git reset --hard")])])]),t._v(" "),_("li",[_("p",[t._v("已暂存，未提交"),_("br"),t._v("\n查看暂存区和本地仓库之间的差异 ：")]),t._v(" "),_("blockquote",[_("p",[t._v("git diff --cached")])]),t._v(" "),_("p",[t._v("撤销操作：")]),t._v(" "),_("blockquote",[_("p",[t._v("git reset   修改退回到了git add .之前的状态"),_("br"),t._v("\ngit checkout .")])]),t._v(" "),_("p",[t._v("或者")]),t._v(" "),_("blockquote",[_("p",[t._v("git reset --hard")])])]),t._v(" "),_("li",[_("p",[t._v("已提交，未推送"),_("br"),t._v("\n本地仓库与远程仓库的差异:")]),t._v(" "),_("blockquote",[_("p",[t._v("git diff master origin/master")])]),t._v(" "),_("p",[t._v("撤销操作：")]),t._v(" "),_("blockquote",[_("p",[t._v("git reset --hard origin/master")])])]),t._v(" "),_("li",[_("p",[t._v("已推送"),_("br"),t._v("\n撤销操作：需要先恢复本地仓库，再强制push到远程仓库")]),t._v(" "),_("blockquote",[_("p",[t._v("git reset --hard HEAD^"),_("br"),t._v("\ngit push -f")])])])])])])])}),[],!1,null,null,null);v.default=i.exports}}]);