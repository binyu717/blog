(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{411:function(t,a,r){"use strict";r.r(a);var o=r(54),e=Object(o.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"tomcat部署时war和war-exploded区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tomcat部署时war和war-exploded区别"}},[t._v("#")]),t._v(" Tomcat部署时war和war exploded区别")]),t._v(" "),r("ul",[r("li",[t._v("war模式：将WEB工程以包的形式上传到服务器 ；")]),t._v(" "),r("li",[t._v("war exploded模式：将WEB工程以当前文件夹的位置关系上传到服务器；\n"),r("blockquote",[r("p",[t._v("（1）war模式这种可以称之为是发布模式，是先打成war包，再发布；"),r("br"),t._v("\n（2）war exploded模式是直接把文件夹、jsp页面 、classes等等移到Tomcat 部署文件夹里面，进行加载部署。因此这种方式支持热部署，一般在开发的时候也是用这种方式。"),r("br"),t._v("\n（3）在平时开发的时候，使用热部署的话，应该对Tomcat进行相应的设置，这样的话修改的jsp界面什么的东西才可以及时的显示出来。\n(4) 先在工程结构配置artifacts,再在tomcat中选择部署的artifact")])])])]),t._v(" "),r("h2",{attrs:{id:"tomcat-三种运行模式-bio、nio、apr"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tomcat-三种运行模式-bio、nio、apr"}},[t._v("#")]),t._v(" Tomcat 三种运行模式(BIO、NIO、APR )")]),t._v(" "),r("ul",[r("li",[t._v("先理清同步异步、阻塞非阻塞的区别\n"),r("blockquote",[r("p",[t._v("从通信机制来看，有同步和异步。\n同步：调用执行过程中没有返回值，结束后才有返回值。\n异步：调用开始后直接返回，并且没有返回值，后面再通过其他方式通知调用者。\n从调用者来看，等待调用结果有两种状态，阻塞和非阻塞。\n阻塞：调用者一直等待调用的结果，阻塞调用者，调用有了结果才返回。\n非阻塞：调用者发起调用后可以马上返回，不阻塞调用者。")])])]),t._v(" "),r("li",[t._v("BIO：同步并阻塞，服务器实现模式为一个连接一个线程")]),t._v(" "),r("li",[t._v("NIO：同步非阻塞，服务器实现模式为一个请求一个线程")]),t._v(" "),r("li",[t._v("AIO：异步非阻塞，服务器实现模式为一个有效请求一个线程")])])])}),[],!1,null,null,null);a.default=e.exports}}]);