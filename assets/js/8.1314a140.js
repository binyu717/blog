(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{395:function(t,a,s){"use strict";s.r(a);var r=s(54),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"推荐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#推荐"}},[t._v("#")]),t._v(" 推荐")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://linuxtools-rst.readthedocs.io/zh_CN/latest/base/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux工具快速教程"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"linux常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux常用命令"}},[t._v("#")]),t._v(" linux常用命令")]),t._v(" "),s("h3",{attrs:{id:"查看文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看文件"}},[t._v("#")]),t._v(" 查看文件")]),t._v(" "),s("ul",[s("li",[t._v("ll  显示当前目录下文件详细信息。")]),t._v(" "),s("li",[t._v("ls 显示当前目录下文件名。")])]),t._v(" "),s("h3",{attrs:{id:"文件操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件操作"}},[t._v("#")]),t._v(" 文件操作")]),t._v(" "),s("ul",[s("li",[t._v("touch 文件夹 or 文件 创建一个空的文件/文件夹")]),t._v(" "),s("li",[t._v("mkdir 文件夹 创建一个文件夹")]),t._v(" "),s("li",[t._v("rm [选项] 文件 | 删除文件\n"),s("blockquote",[s("p",[t._v("-r  删除文件夹"),s("br"),t._v("\n-f  删除不提示"),s("br"),t._v("\n-i  删除提示\n-v  详细显示进行步骤")])])])]),t._v(" "),s("h3",{attrs:{id:"查找文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查找文件"}},[t._v("#")]),t._v(" 查找文件")]),t._v(" "),s("ul",[s("li",[t._v("ls -l grep 'jar' 查找当前目录下的所有jar文件")]),t._v(" "),s("li",[t._v("find\n"),s("blockquote",[s("p",[t._v("find / -name filename 从 '/' 开始进入根文件系统搜索文件和目录"),s("br"),t._v("\nfind / -user username 搜索属于用户username的文件和目录"),s("br"),t._v("\nfind / -name *.xml 在目录 / 中搜索带有'.xml' 结尾的文件")])])])]),t._v(" "),s("h3",{attrs:{id:"查看进程-ps-process-status-进程状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看进程-ps-process-status-进程状态"}},[t._v("#")]),t._v(" 查看进程 ps process status (进程状态)")]),t._v(" "),s("blockquote",[s("p",[t._v("ps -auxf 显示进程状态"),s("br"),t._v("\nps -a 显示所有进程"),s("br"),t._v("\nps -ef | grep java 表示查看所有进程里 CMD 是 java 的进程信息"),s("br"),t._v("\nlinux下通过进程名查看其占用端口"),s("br"),t._v("\nps -ef | grep 进程名  (先查看进程pid)"),s("br"),t._v("\nnetstat -nap | grep 进程pid  (通过pid查看占用端口)")])]),t._v(" "),s("ul",[s("li",[t._v("kill -s 9 进程号")]),t._v(" "),s("li",[t._v("查看端口信息\n"),s("blockquote",[s("p",[t._v("nmap 127.0.0.1 查看本机所有开放的端口")])])])]),t._v(" "),s("h3",{attrs:{id:"内存信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存信息"}},[t._v("#")]),t._v(" 内存信息")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("> free -m  单位为Mb查看内存信息   \n> top     任务管理器    \n    USER    进程所有者    \n    PR  优先级      \n    NI  nice值，负值表示高优先级，正值表示低优先级            \n    VIRT    进程使用的虚拟内存总量            \n    RES 进程使用的、未被换出的物理内存大小             \n    SHR 共享内存大小          \n    S   进程状态           \n    %CPU    上次更新到现在的CPU时间占用百分比      \n    %MEM    进程使用的物理内存百分比       \n    TIME+   进程使用CPU总时间          \n    COMMAND 命令名、命令行        \n")])])]),s("h3",{attrs:{id:"磁盘空间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#磁盘空间"}},[t._v("#")]),t._v(" 磁盘空间")]),t._v(" "),s("blockquote",[s("p",[t._v("df -h 显示已经挂载的分区列表 （disk free）\ndu: Disk usage")])]),t._v(" "),s("h3",{attrs:{id:"查看日志文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看日志文件"}},[t._v("#")]),t._v(" 查看日志文件")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("> tail -f catalina.out   \n> grep -C 20 'XXXX' catalina.out  上下文20行  \n> grep -i  'XXXX' catalina.out  精确行\n")])])]),s("ul",[s("li",[t._v("输出日志到指定文件\n"),s("blockquote",[s("p",[t._v("touch test.log  当前目录创建一个用来存放数据的文件 test.log"),s("br"),t._v("\ntail -n catalina.out > test.log  将catalina.out文件的最后n行输出到test.log中")])])])]),t._v(" "),s("h3",{attrs:{id:"tar-命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tar-命令"}},[t._v("#")]),t._v(" tar 命令")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("tar [选项] 源文件/目录/压缩包")])]),t._v(" "),s("ul",[s("li",[t._v("-c：将多个文件或目录进行打包。")]),t._v(" "),s("li",[t._v("-x：对tar包做解打包操作")]),t._v(" "),s("li",[t._v("-v：显示打包文件的过程。")]),t._v(" "),s("li",[t._v("-f 文件名：指定解打包的文件名。")]),t._v(" "),s("li",[t._v("-C 目录名：指定解打包位置。")]),t._v(" "),s("li",[t._v("-z：压缩和解压缩.tar.gz格式。")]),t._v(" "),s("li",[t._v("-j：压缩和解压缩.tar.bz2格式。")]),t._v(" "),s("li",[t._v("-t: 只查看包中有哪些文件或目录，不做解打包操作。")])])]),t._v(" "),s("p",[t._v("eg：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("// 打包成tar\n "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -cvf demo.tar demo1 demo2\n// 打包成tar.gz\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -zcvf demo.tar.gz demo1 demo2\n// 解压缩文件\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -zxvf demo.tar.gz \n// 查看 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" 格式文件的内容\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -ztvf demo.tar.gz\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);